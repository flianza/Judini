@page "/turnos/todos"

@using Judini.Shared.Enums
@using Judini.Shared.Turnos
@using Judini.Client.Servicios.Turnos.Contratos
@using Judini.Client.Infraestructura

@inject ITurnosApi turnosApi
@inject IDateProvider dateProvider

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Agenda</MudText>

<MudGrid>
    <MudItem xs="12" md="9">
        <Scheduler Modo="ModoScheduler.Mes" Fecha="@dateProvider.Now"></Scheduler>
    </MudItem>
    <MudItem xs="12" md="3">
        @foreach (var turno in turnos)
        {
            <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-6 mb-3" Style="height:100px;">
                <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Primary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
                <div>
                    <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">@turno.Inicio</MudText>
                    <MudText Typo="Typo.h5">@turno.Nombre</MudText>
                </div>
            </MudPaper>
        }
    </MudItem>
</MudGrid>

@code {
    List<Turno> turnos = new();

    protected override async Task OnInitializedAsync()
    {
        this.turnos = (await this.turnosApi.Todos()).Where(t => t.Fin >= this.dateProvider.Now).ToList();
    }
}
