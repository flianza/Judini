@page "/iniciar-sesion"

@using Judini.Client.Infraestructura

@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginParameters">
        <DataAnnotationsValidator />
        <MudText Typo="Typo.h4" GutterBottom="true">Iniciar Sesion</MudText>

        <label for="inputUsername" class="sr-only">User Name</label>
        <InputText id="inputUsername" class="form-control" @bind-Value="loginParameters.NombreDeUsuario" autofocus placeholder="Username" />
        <ValidationMessage For="@(() => loginParameters.NombreDeUsuario)" />

        <label for="inputPassword" class="sr-only">Password</label>
        <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginParameters.Contrasenia" />
        <ValidationMessage For="@(() => loginParameters.Contrasenia)" />

        <div class="form-check m-3">
            <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginParameters.Recordarme" />
            <label class="form-check-label" for="inputRememberMe">Remember Me</label>
        </div>

        <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>

        <label class="text-danger">@error</label>

        <NavLink href="register">
            <h6 class="font-weight-normal text-center">Create account</h6>
        </NavLink>
    </EditForm>
</MudContainer>



@code{
    IniciarSesionRequest loginParameters { get; set; } = new IniciarSesionRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginParameters);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}