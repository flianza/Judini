@using Judini.Shared.Turnos
@using Judini.Shared.Enums
@using Judini.Client.Infraestructura

@inject IDateProvider dateProvider

<RadzenScheduler @ref=@scheduler TItem="Turno"
                 Data=@turnos SelectedIndex="@selectedIndex"
                 StartProperty="Inicio" EndProperty="Fin" TextProperty="Nombre"
                 TodayText="Hoy">
    <RadzenDayView StartTime="horaInicio" EndTime="horaFin" Text="Dia" />
    <RadzenWeekView StartTime="horaInicio" EndTime="horaFin" Text="Semana" />
    <RadzenMonthView Text="Mes" />
</RadzenScheduler>

@code {
    DateTime fecha;
    RadzenScheduler<Turno> scheduler;
    List<Turno> turnos = new();
    int selectedIndex;
    TimeSpan horaInicio = new TimeSpan(15, 0, 0);
    TimeSpan horaFin = new TimeSpan(22, 0, 0);

    [Parameter]
    public DateTime? Fecha
    {
        get { return this.fecha; }
        set
        {
            this.fecha = value ?? this.dateProvider.Now;
        }
    }
    [Parameter] public ModoScheduler Modo { get; set; } = ModoScheduler.Dia;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        this.selectedIndex = (int)this.Modo;
    }

    protected override void OnParametersSet()
    {
        if (this.scheduler != null)
        {
            this.scheduler.CurrentDate = this.fecha;
        }
    }

    public async Task AgregarTurnoAsync(Turno turno)
    {
        this.turnos.Add(turno);

        await this.scheduler.Reload();
    }
}
